services:
#   frontend:
#     build:
#       context: ./frontend
#       dockerfile: Dockerfile
#     ports:
#       - "8000:8080"
#     environment:
#       API_HOST: http://backend:8000
#       URL_DJANGO: http://frontend:8080
#     depends_on:
#       backend:
#         condition: service_healthy
#     networks:
#       - front-back

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8001:8000"
    environment:
      - DB_URL=mysql://$MYSQL_USER:$MYSQL_PASSWORD@db:3306/$MYSQL_DATABASE
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/ping"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - front-back
      - internals
    develop:
      watch:
        - action: sync
          path: ./backend
          target: /app
          ignore:
            - .venv
            - __pycache__
            - pyproject.toml
            - pdm.lock

  db:
    image: mysql:9.3
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-CHANGEME}
      MYSQL_USER: $MYSQL_USER
      MYSQL_PASSWORD: $MYSQL_PASSWORD
      MYSQL_DATABASE: $MYSQL_DATABASE
    networks:
      - internals
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      start_period: 15s
      start_interval: 10s
      interval: 10s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer
    restart: always
    ports:
      - "8002:8080"
    # environment:
      # - ADMINER_DEFAULT_SERVER=mysql
    networks:
      - front-back
      - internals

networks:
  front-back:
  internals:

volumes:
  db_data:
